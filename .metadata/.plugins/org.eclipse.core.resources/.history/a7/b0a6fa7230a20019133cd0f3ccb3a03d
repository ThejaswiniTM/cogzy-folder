package com.cogzy.utils;

public class SinglyLinkedList<T> {

	private Node<T> start, end;

	private int size;

	public SinglyLinkedList() {
		start = end = null;
	}

	public void addAtStart(T data) {
		Node<T> newNode = new Node<T>(data);
		if (start == null) {
			start = end = newNode;
		} else {
			newNode.next = start;
			start = newNode;
		}
		size++;
	}

	public void addAtEnd(T data) {
		Node<T> newNode = new Node<T>(data);
		if (start == null) {
			start = end = newNode;
		} else {

			end.next = newNode;
			end = newNode;
		}
		size++;
	}

	private class Node<T> {
		private T data;
		private Node next;

		private Node(T data) {

			this.data = data;

		}

		public void addAtIndex(T data, int index) {
			if (index < 0 || index >= size) {
				throw new IndexOutOfBoundsException("Invalid index");

			}
			if (index == 0) {
				this.addAtStart(data);
				return;
			}

			Node<T> newNode = new Node<T>(data);
			Node<T> temp = start;
			for (int i = 1; i < index; i++) {
				temp = temp.next;
			}

			newNode.next = temp.next;
			temp.next = newNode;
			size++;
		}

		public String toString() {
			String str = "SinglyLinkedList [";

			if (start == null) {
				str += "]";
				return str;
			}

			Node<T> temp = start;
			while (temp != end) {
				str += temp.data + ", ";
				temp = temp.next;
			}

			str += temp.data;
			str += "]";

			return str;
		}

		public T getData() {
			return data;
		}

		public void setData(T data) {
			this.data = data;
		}

		public Node getNext() {
			return next;
		}

		public void setNext(Node next) {
			this.next = next;
		}

	}
}
